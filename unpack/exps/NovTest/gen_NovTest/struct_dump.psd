
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class BARRIER
{
  ;
} ;
class DUMMY
{
  ;
} ;
class FEBEX_BAD_EVENT
{
  ;
} ;
class FEBEX_EVENT
{
  DATA32 event_trigger_time_hi;
  DATA32 event_trigger_time_lo;
  DATA16 hit_pattern;
  raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  raw_array_zero_suppress<DATA8,DATA8,16> pileup;
  raw_array_zero_suppress<DATA8,DATA8,16> overflow;
  raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
} ;
class FEBEX_EVENT_TRACES
{
  DATA32 event_trigger_time_hi;
  DATA32 event_trigger_time_lo;
  DATA16 hit_pattern;
  DATA32 num_channels_fired;
  raw_array_zero_suppress<DATA8,DATA8,16> channel_id;
  raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  raw_array<DATA8,DATA8,16> pileup;
  raw_array<DATA8,DATA8,16> overflow;
  raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
  raw_array_zero_suppress<DATA16,DATA16,10000> traces[16];
  DUMMY dummy;
} ;
class FEBEX_PADDING
{
  ;
} ;
class VME_CAEN_V830_FRS
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
} ;
class ZERO_FILLER
{
  ;
} ;
class VME_CAEN_V792_FRS
{
  raw_array_multi_zero_suppress<DATA32,DATA32,32,32> data;
  DATA8 geo;
} ;
class TDC_HEADER
{
  ;
} ;
class TDC_DATA_V1290
{
  ;
} ;
class TDC_ERROR
{
  ;
} ;
class TDC_TRAILER
{
  ;
} ;
class VME_CAEN_V1290_FRS
{
  raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
  TDC_HEADER tdc_header;
  TDC_DATA_V1290 measurement;
  TDC_ERROR tdc_err;
  TDC_TRAILER tdc_trailer;
} ;
class MAIN_CRATE_DATA
{
  BARRIER barrier[3];
  VME_CAEN_V830_FRS v830;
  ZERO_FILLER filler[1];
  VME_CAEN_V792_FRS v792;
  VME_CAEN_V1290_FRS v1290;
} ;
class MESYTEC_MQDC32_FRS
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
} ;
class MESYTEC_MTDC32_FRS
{
  raw_array_zero_suppress<DATA16,DATA16,34> data;
} ;
class SIS_3820_FRS
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
} ;
class TAMEX4_EPOCH_DATA
{
  ;
} ;
class TAMEX4_HEADER
{
  raw_list_ii_zero_suppress<DATA16,DATA16,64> post_trig_ns;
  raw_list_ii_zero_suppress<DATA16,DATA16,64> pre_trig_ns;
} ;
class TAMEX4_PADDING
{
  ;
} ;
class TAMEX4_TIME_DATA
{
  ;
} ;
class TAMEX4_SFP
{
  DATA32 event_size;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_coarse;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_fine;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_edge;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_channel;
  raw_list_ii_zero_suppress<DATA32,DATA32,1024> time_epoch;
  TAMEX4_EPOCH_DATA epoch;
  TAMEX4_TIME_DATA time;
} ;
class TDC_DATA_V1190
{
  ;
} ;
class TIMESTAMP_WHITERABBIT
{
  DATA12 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TIMESTAMP_WHITERABBIT_EXTENDED
{
  DATA16 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class VME_CAEN_V7X5_FRS
{
  raw_array_zero_suppress<DATA24,DATA24,32> data;
  raw_array_zero_suppress<DATA8,DATA8,32> channel;
  raw_array_zero_suppress<DATA8,DATA8,32> geo;
} ;
class VME_CAEN_V1190_FRS
{
  raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
  TDC_HEADER tdc_header;
  TDC_DATA_V1190 measurement;
  TDC_ERROR tdc_error;
  TDC_TRAILER tdc_trailer;
} ;
class TPC_CRATE_DATA
{
  BARRIER barrier[3];
  VME_CAEN_V7X5_FRS v775;
  VME_CAEN_V7X5_FRS v785;
  VME_CAEN_V1190_FRS v1190;
} ;
class TRIG3EVENT
{
  ;
} ;
class USER_CRATE_DATA
{
  BARRIER barrier[5];
  VME_CAEN_V830_FRS v830;
  ZERO_FILLER filler[1];
  VME_CAEN_V7X5_FRS v775[2];
  VME_CAEN_V7X5_FRS v785[2];
} ;
class VFTX2
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  DATA16 time_trigger;
} ;
class VFTX_CRATE_DATA
{
  MESYTEC_MQDC32_FRS mqdc0;
  MESYTEC_MQDC32_FRS mqdc1;
  VFTX2 vftx;
  BARRIER barrier[3];
  MESYTEC_MTDC32_FRS mtdc;
} ;
class WR_MULTI
{
  DATA32 time_hi;
  DATA32 time_lo;
} ;
class aida_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
  EXT_AIDA data;
} ;
class bplast_subev : public unpack_subevent_base
{
  TAMEX4_PADDING padding;
  TAMEX4_SFP tamex[3];
  TIMESTAMP_WHITERABBIT ts;
  TAMEX4_HEADER trigger_window;
} ;
class fatima_tamex_subev : public unpack_subevent_base
{
  TAMEX4_PADDING padding;
  TAMEX4_SFP tamex[2];
  TIMESTAMP_WHITERABBIT_EXTENDED ts;
  TAMEX4_HEADER trigger_window;
} ;
class febex_subev : public unpack_subevent_base
{
  FEBEX_PADDING padding;
  FEBEX_EVENT data[4];
  TIMESTAMP_WHITERABBIT ts;
} ;
class frs_main_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT wr;
  TRIG3EVENT trig3;
  MAIN_CRATE_DATA data;
} ;
class frs_tpc_subev : public unpack_subevent_base
{
  TRIG3EVENT trig3;
  TPC_CRATE_DATA data;
} ;
class frs_user_subev : public unpack_subevent_base
{
  TRIG3EVENT trig3;
  USER_CRATE_DATA data;
} ;
class frs_vftx_subev : public unpack_subevent_base
{
  TRIG3EVENT trig3;
  VFTX_CRATE_DATA data;
} ;
class unpack_event : public unpack_event_base
{
  aida_subev aida;
  fatima_tamex_subev fatima;
  bplast_subev bplast;
  frs_main_subev frsmain;
  frs_tpc_subev frstpc;
  frs_user_subev frsuser;
  frs_vftx_subev frsvftx;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_BARRIER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(BARRIER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(BARRIER);
};
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_DUMMY
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DUMMY)
{
public:
  STRUCT_MIRROR_FCNS_DECL(DUMMY);
};
#endif//USER_DEF_DUMMY

#ifndef USER_DEF_FEBEX_BAD_EVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_BAD_EVENT)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_BAD_EVENT);
};
#endif//USER_DEF_FEBEX_BAD_EVENT

#ifndef USER_DEF_FEBEX_EVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(hit_pattern);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(hit_pattern);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_hi);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),16> STRUCT_MIRROR_NAME(channel_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_lo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(pileup);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(pileup);
  STRUCT_MIRROR_ITEM_CTRL(overflow);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(overflow);
  STRUCT_MIRROR_ITEM_CTRL(channel_cfd);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_cfd);
  STRUCT_MIRROR_ITEM_CTRL(channel_energy);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_energy);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENT);
};
#endif//USER_DEF_FEBEX_EVENT

#ifndef USER_DEF_FEBEX_EVENT_TRACES
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENT_TRACES)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(hit_pattern);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(hit_pattern);
  STRUCT_MIRROR_ITEM_CTRL(num_channels_fired);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(num_channels_fired);
  STRUCT_MIRROR_ITEM_CTRL(channel_id);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_id);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_hi);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),16> STRUCT_MIRROR_NAME(channel_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_lo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(pileup);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(pileup);
  STRUCT_MIRROR_ITEM_CTRL(overflow);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(overflow);
  STRUCT_MIRROR_ITEM_CTRL(channel_cfd);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_cfd);
  STRUCT_MIRROR_ITEM_CTRL(channel_energy);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_energy);
  STRUCT_MIRROR_ITEM_CTRL(traces);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(traces__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),10000> STRUCT_MIRROR_NAME(traces[16]);
  STRUCT_MIRROR_ITEM_CTRL(dummy);
  STRUCT_MIRROR_TYPE(DUMMY) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENT_TRACES);
};
#endif//USER_DEF_FEBEX_EVENT_TRACES

#ifndef USER_DEF_FEBEX_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_PADDING);
};
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_VME_CAEN_V830_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V830_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V830_FRS);
};
#endif//USER_DEF_VME_CAEN_V830_FRS

#ifndef USER_DEF_ZERO_FILLER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(ZERO_FILLER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(ZERO_FILLER);
};
#endif//USER_DEF_ZERO_FILLER

#ifndef USER_DEF_VME_CAEN_V792_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V792_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32,32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_ITEM_CTRL(geo);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geo);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V792_FRS);
};
#endif//USER_DEF_VME_CAEN_V792_FRS

#ifndef USER_DEF_TDC_HEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_HEADER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_HEADER);
};
#endif//USER_DEF_TDC_HEADER

#ifndef USER_DEF_TDC_DATA_V1290
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_DATA_V1290)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_DATA_V1290);
};
#endif//USER_DEF_TDC_DATA_V1290

#ifndef USER_DEF_TDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_ERROR)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_ERROR);
};
#endif//USER_DEF_TDC_ERROR

#ifndef USER_DEF_TDC_TRAILER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_TRAILER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_TRAILER);
};
#endif//USER_DEF_TDC_TRAILER

#ifndef USER_DEF_VME_CAEN_V1290_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),128,128> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_ITEM_CTRL(leadOrTrail);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),128,128> STRUCT_MIRROR_NAME(leadOrTrail);
  STRUCT_MIRROR_ITEM_CTRL(tdc_header);
  STRUCT_MIRROR_TYPE(TDC_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_header);
  STRUCT_MIRROR_ITEM_CTRL(measurement);
  STRUCT_MIRROR_TYPE(TDC_DATA_V1290) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(measurement);
  STRUCT_MIRROR_ITEM_CTRL(tdc_err);
  STRUCT_MIRROR_TYPE(TDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_err);
  STRUCT_MIRROR_ITEM_CTRL(tdc_trailer);
  STRUCT_MIRROR_TYPE(TDC_TRAILER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_FRS);
};
#endif//USER_DEF_VME_CAEN_V1290_FRS

#ifndef USER_DEF_MAIN_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(MAIN_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(barrier__i0,,3);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier[3]);
  STRUCT_MIRROR_ITEM_CTRL(v830);
  STRUCT_MIRROR_TYPE(VME_CAEN_V830_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v830);
  STRUCT_MIRROR_ITEM_CTRL(filler);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(filler__i0,,1);
  STRUCT_MIRROR_TYPE(ZERO_FILLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(filler[1]);
  STRUCT_MIRROR_ITEM_CTRL(v792);
  STRUCT_MIRROR_TYPE(VME_CAEN_V792_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v792);
  STRUCT_MIRROR_ITEM_CTRL(v1290);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v1290);
  STRUCT_MIRROR_FCNS_DECL(MAIN_CRATE_DATA);
};
#endif//USER_DEF_MAIN_CRATE_DATA

#ifndef USER_DEF_MESYTEC_MQDC32_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(MESYTEC_MQDC32_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(MESYTEC_MQDC32_FRS);
};
#endif//USER_DEF_MESYTEC_MQDC32_FRS

#ifndef USER_DEF_MESYTEC_MTDC32_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(MESYTEC_MTDC32_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),34> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(MESYTEC_MTDC32_FRS);
};
#endif//USER_DEF_MESYTEC_MTDC32_FRS

#ifndef USER_DEF_SIS_3820_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SIS_3820_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(SIS_3820_FRS);
};
#endif//USER_DEF_SIS_3820_FRS

#ifndef USER_DEF_TAMEX4_EPOCH_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_EPOCH_DATA)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_EPOCH_DATA);
};
#endif//USER_DEF_TAMEX4_EPOCH_DATA

#ifndef USER_DEF_TAMEX4_HEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_HEADER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(post_trig_ns);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64> STRUCT_MIRROR_NAME(post_trig_ns);
  STRUCT_MIRROR_ITEM_CTRL(pre_trig_ns);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64> STRUCT_MIRROR_NAME(pre_trig_ns);
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_HEADER);
};
#endif//USER_DEF_TAMEX4_HEADER

#ifndef USER_DEF_TAMEX4_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_PADDING);
};
#endif//USER_DEF_TAMEX4_PADDING

#ifndef USER_DEF_TAMEX4_TIME_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_TIME_DATA)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_TIME_DATA);
};
#endif//USER_DEF_TAMEX4_TIME_DATA

#ifndef USER_DEF_TAMEX4_SFP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_SFP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(event_size);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_size);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_edge);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_edge);
  STRUCT_MIRROR_ITEM_CTRL(time_channel);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_channel);
  STRUCT_MIRROR_ITEM_CTRL(time_epoch);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),1024> STRUCT_MIRROR_NAME(time_epoch);
  STRUCT_MIRROR_ITEM_CTRL(epoch);
  STRUCT_MIRROR_TYPE(TAMEX4_EPOCH_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(epoch);
  STRUCT_MIRROR_ITEM_CTRL(time);
  STRUCT_MIRROR_TYPE(TAMEX4_TIME_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time);
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_SFP);
};
#endif//USER_DEF_TAMEX4_SFP

#ifndef USER_DEF_TDC_DATA_V1190
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_DATA_V1190)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_DATA_V1190);
};
#endif//USER_DEF_TDC_DATA_V1190

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT_EXTENDED)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT_EXTENDED);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED

#ifndef USER_DEF_VME_CAEN_V7X5_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V7X5_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_ITEM_CTRL(channel);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),32> STRUCT_MIRROR_NAME(channel);
  STRUCT_MIRROR_ITEM_CTRL(geo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),32> STRUCT_MIRROR_NAME(geo);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V7X5_FRS);
};
#endif//USER_DEF_VME_CAEN_V7X5_FRS

#ifndef USER_DEF_VME_CAEN_V1190_FRS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_FRS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),128,128> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_ITEM_CTRL(leadOrTrail);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),128,128> STRUCT_MIRROR_NAME(leadOrTrail);
  STRUCT_MIRROR_ITEM_CTRL(tdc_header);
  STRUCT_MIRROR_TYPE(TDC_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_header);
  STRUCT_MIRROR_ITEM_CTRL(measurement);
  STRUCT_MIRROR_TYPE(TDC_DATA_V1190) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(measurement);
  STRUCT_MIRROR_ITEM_CTRL(tdc_error);
  STRUCT_MIRROR_TYPE(TDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
  STRUCT_MIRROR_ITEM_CTRL(tdc_trailer);
  STRUCT_MIRROR_TYPE(TDC_TRAILER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_FRS);
};
#endif//USER_DEF_VME_CAEN_V1190_FRS

#ifndef USER_DEF_TPC_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TPC_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(barrier__i0,,3);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier[3]);
  STRUCT_MIRROR_ITEM_CTRL(v775);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v775);
  STRUCT_MIRROR_ITEM_CTRL(v785);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v785);
  STRUCT_MIRROR_ITEM_CTRL(v1190);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v1190);
  STRUCT_MIRROR_FCNS_DECL(TPC_CRATE_DATA);
};
#endif//USER_DEF_TPC_CRATE_DATA

#ifndef USER_DEF_TRIG3EVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRIG3EVENT)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TRIG3EVENT);
};
#endif//USER_DEF_TRIG3EVENT

#ifndef USER_DEF_USER_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(USER_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(barrier__i0,,5);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier[5]);
  STRUCT_MIRROR_ITEM_CTRL(v830);
  STRUCT_MIRROR_TYPE(VME_CAEN_V830_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v830);
  STRUCT_MIRROR_ITEM_CTRL(filler);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(filler__i0,,1);
  STRUCT_MIRROR_TYPE(ZERO_FILLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(filler[1]);
  STRUCT_MIRROR_ITEM_CTRL(v775);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(v775__i0,,2);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v775[2]);
  STRUCT_MIRROR_ITEM_CTRL(v785);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(v785__i0,,2);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v785[2]);
  STRUCT_MIRROR_FCNS_DECL(USER_CRATE_DATA);
};
#endif//USER_DEF_USER_CRATE_DATA

#ifndef USER_DEF_VFTX2
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VFTX2)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
  STRUCT_MIRROR_FCNS_DECL(VFTX2);
};
#endif//USER_DEF_VFTX2

#ifndef USER_DEF_VFTX_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VFTX_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(mqdc0);
  STRUCT_MIRROR_TYPE(MESYTEC_MQDC32_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mqdc0);
  STRUCT_MIRROR_ITEM_CTRL(mqdc1);
  STRUCT_MIRROR_TYPE(MESYTEC_MQDC32_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mqdc1);
  STRUCT_MIRROR_ITEM_CTRL(vftx);
  STRUCT_MIRROR_TYPE(VFTX2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx);
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(barrier__i0,,3);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier[3]);
  STRUCT_MIRROR_ITEM_CTRL(mtdc);
  STRUCT_MIRROR_TYPE(MESYTEC_MTDC32_FRS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mtdc);
  STRUCT_MIRROR_FCNS_DECL(VFTX_CRATE_DATA);
};
#endif//USER_DEF_VFTX_CRATE_DATA

#ifndef USER_DEF_WR_MULTI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(WR_MULTI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_hi);
  STRUCT_MIRROR_ITEM_CTRL(time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_lo);
  STRUCT_MIRROR_FCNS_DECL(WR_MULTI);
};
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_aida_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(aida_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(EXT_AIDA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(aida_subev);
};
#endif//USER_DEF_aida_subev

#ifndef USER_DEF_bplast_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(bplast_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(TAMEX4_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,3);
  STRUCT_MIRROR_TYPE(TAMEX4_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[3]);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(trigger_window);
  STRUCT_MIRROR_TYPE(TAMEX4_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_FCNS_DECL(bplast_subev);
};
#endif//USER_DEF_bplast_subev

#ifndef USER_DEF_fatima_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fatima_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(TAMEX4_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,2);
  STRUCT_MIRROR_TYPE(TAMEX4_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[2]);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT_EXTENDED) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(trigger_window);
  STRUCT_MIRROR_TYPE(TAMEX4_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_FCNS_DECL(fatima_tamex_subev);
};
#endif//USER_DEF_fatima_tamex_subev

#ifndef USER_DEF_febex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(febex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(FEBEX_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(data__i0,,4);
  STRUCT_MIRROR_TYPE(FEBEX_EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data[4]);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(febex_subev);
};
#endif//USER_DEF_febex_subev

#ifndef USER_DEF_frs_main_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_main_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(wr);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(wr);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(MAIN_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_main_subev);
};
#endif//USER_DEF_frs_main_subev

#ifndef USER_DEF_frs_tpc_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_tpc_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(TPC_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_tpc_subev);
};
#endif//USER_DEF_frs_tpc_subev

#ifndef USER_DEF_frs_user_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_user_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(USER_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_user_subev);
};
#endif//USER_DEF_frs_user_subev

#ifndef USER_DEF_frs_vftx_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_vftx_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(VFTX_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_vftx_subev);
};
#endif//USER_DEF_frs_vftx_subev

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(aida);
  STRUCT_MIRROR_TYPE(aida_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(aida);
  STRUCT_MIRROR_ITEM_CTRL(fatima);
  STRUCT_MIRROR_TYPE(fatima_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fatima);
  STRUCT_MIRROR_ITEM_CTRL(bplast);
  STRUCT_MIRROR_TYPE(bplast_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bplast);
  STRUCT_MIRROR_ITEM_CTRL(frsmain);
  STRUCT_MIRROR_TYPE(frs_main_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frsmain);
  STRUCT_MIRROR_ITEM_CTRL(frstpc);
  STRUCT_MIRROR_TYPE(frs_tpc_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frstpc);
  STRUCT_MIRROR_ITEM_CTRL(frsuser);
  STRUCT_MIRROR_TYPE(frs_user_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frsuser);
  STRUCT_MIRROR_ITEM_CTRL(frsvftx);
  STRUCT_MIRROR_TYPE(frs_vftx_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frsvftx);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(BARRIER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DUMMY);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_BAD_EVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENT_TRACES);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V830_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(ZERO_FILLER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V792_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_HEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_DATA_V1290);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_TRAILER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(MAIN_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(MESYTEC_MQDC32_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(MESYTEC_MTDC32_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SIS_3820_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_EPOCH_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_HEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_TIME_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_SFP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_DATA_V1190);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT_EXTENDED);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V7X5_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_FRS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TPC_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRIG3EVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(USER_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VFTX2);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VFTX_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(WR_MULTI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(aida_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(bplast_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fatima_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(febex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_main_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_tpc_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_user_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_vftx_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_BARRIER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(BARRIER)::FCNCALL_NAME(BARRIER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_DUMMY
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DUMMY)::FCNCALL_NAME(DUMMY)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_DUMMY

#ifndef USER_DEF_FEBEX_BAD_EVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_BAD_EVENT)::FCNCALL_NAME(FEBEX_BAD_EVENT)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_BAD_EVENT

#ifndef USER_DEF_FEBEX_EVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENT)::FCNCALL_NAME(FEBEX_EVENT)
{
  FCNCALL_INIT;
  // DATA32 event_trigger_time_hi;
  {
  FCNCALL_SUBNAME("event_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_hi,event_trigger_time_hi.FCNCALL_CALL(event_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_trigger_time_lo;
  {
  FCNCALL_SUBNAME("event_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_lo,event_trigger_time_lo.FCNCALL_CALL(event_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 hit_pattern;
  {
  FCNCALL_SUBNAME("hit_pattern");
  { FCNCALL_CALL_CTRL_WRAP(hit_pattern,hit_pattern.FCNCALL_CALL(hit_pattern)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  {
  FCNCALL_SUBNAME("channel_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_hi,channel_trigger_time_hi.FCNCALL_CALL(channel_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  {
  FCNCALL_SUBNAME("channel_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_lo,channel_trigger_time_lo.FCNCALL_CALL(channel_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> pileup;
  {
  FCNCALL_SUBNAME("pileup");
  { FCNCALL_CALL_CTRL_WRAP(pileup,pileup.FCNCALL_CALL(pileup)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> overflow;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(overflow,overflow.FCNCALL_CALL(overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  {
  FCNCALL_SUBNAME("channel_cfd");
  { FCNCALL_CALL_CTRL_WRAP(channel_cfd,channel_cfd.FCNCALL_CALL(channel_cfd)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
  {
  FCNCALL_SUBNAME("channel_energy");
  { FCNCALL_CALL_CTRL_WRAP(channel_energy,channel_energy.FCNCALL_CALL(channel_energy)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENT

#ifndef USER_DEF_FEBEX_EVENT_TRACES
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENT_TRACES)::FCNCALL_NAME(FEBEX_EVENT_TRACES)
{
  FCNCALL_INIT;
  // DATA32 event_trigger_time_hi;
  {
  FCNCALL_SUBNAME("event_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_hi,event_trigger_time_hi.FCNCALL_CALL(event_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_trigger_time_lo;
  {
  FCNCALL_SUBNAME("event_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_lo,event_trigger_time_lo.FCNCALL_CALL(event_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 hit_pattern;
  {
  FCNCALL_SUBNAME("hit_pattern");
  { FCNCALL_CALL_CTRL_WRAP(hit_pattern,hit_pattern.FCNCALL_CALL(hit_pattern)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 num_channels_fired;
  {
  FCNCALL_SUBNAME("num_channels_fired");
  { FCNCALL_CALL_CTRL_WRAP(num_channels_fired,num_channels_fired.FCNCALL_CALL(num_channels_fired)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_id;
  {
  FCNCALL_SUBNAME("channel_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_id,channel_id.FCNCALL_CALL(channel_id)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  {
  FCNCALL_SUBNAME("channel_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_hi,channel_trigger_time_hi.FCNCALL_CALL(channel_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  {
  FCNCALL_SUBNAME("channel_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_lo,channel_trigger_time_lo.FCNCALL_CALL(channel_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array<DATA8,DATA8,16> pileup;
  {
  FCNCALL_SUBNAME("pileup");
  { FCNCALL_CALL_CTRL_WRAP(pileup,pileup.FCNCALL_CALL(pileup)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array<DATA8,DATA8,16> overflow;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(overflow,overflow.FCNCALL_CALL(overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  {
  FCNCALL_SUBNAME("channel_cfd");
  { FCNCALL_CALL_CTRL_WRAP(channel_cfd,channel_cfd.FCNCALL_CALL(channel_cfd)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
  {
  FCNCALL_SUBNAME("channel_energy");
  { FCNCALL_CALL_CTRL_WRAP(channel_energy,channel_energy.FCNCALL_CALL(channel_energy)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,10000> traces[16];
  {
  FCNCALL_SUBNAME("traces");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(traces__i0,,__i0,traces[__i0].FCNCALL_CALL(traces[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // DUMMY dummy;
  {
  FCNCALL_SUBNAME("dummy");
  { FCNCALL_CALL_CTRL_WRAP(dummy,dummy.FCNCALL_CALL(dummy)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENT_TRACES

#ifndef USER_DEF_FEBEX_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_PADDING)::FCNCALL_NAME(FEBEX_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_VME_CAEN_V830_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V830_FRS)::FCNCALL_NAME(VME_CAEN_V830_FRS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V830_FRS

#ifndef USER_DEF_ZERO_FILLER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(ZERO_FILLER)::FCNCALL_NAME(ZERO_FILLER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_ZERO_FILLER

#ifndef USER_DEF_VME_CAEN_V792_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V792_FRS)::FCNCALL_NAME(VME_CAEN_V792_FRS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA32,DATA32,32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 geo;
  {
  FCNCALL_SUBNAME("geo");
  { FCNCALL_CALL_CTRL_WRAP(geo,geo.FCNCALL_CALL(geo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V792_FRS

#ifndef USER_DEF_TDC_HEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_HEADER)::FCNCALL_NAME(TDC_HEADER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_HEADER

#ifndef USER_DEF_TDC_DATA_V1290
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_DATA_V1290)::FCNCALL_NAME(TDC_DATA_V1290)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_DATA_V1290

#ifndef USER_DEF_TDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_ERROR)::FCNCALL_NAME(TDC_ERROR)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_ERROR

#ifndef USER_DEF_TDC_TRAILER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_TRAILER)::FCNCALL_NAME(TDC_TRAILER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_TRAILER

#ifndef USER_DEF_VME_CAEN_V1290_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_FRS)::FCNCALL_NAME(VME_CAEN_V1290_FRS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
  {
  FCNCALL_SUBNAME("leadOrTrail");
  { FCNCALL_CALL_CTRL_WRAP(leadOrTrail,leadOrTrail.FCNCALL_CALL(leadOrTrail)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_HEADER tdc_header;
  {
  FCNCALL_SUBNAME("tdc_header");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header,tdc_header.FCNCALL_CALL(tdc_header)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_DATA_V1290 measurement;
  {
  FCNCALL_SUBNAME("measurement");
  { FCNCALL_CALL_CTRL_WRAP(measurement,measurement.FCNCALL_CALL(measurement)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_ERROR tdc_err;
  {
  FCNCALL_SUBNAME("tdc_err");
  { FCNCALL_CALL_CTRL_WRAP(tdc_err,tdc_err.FCNCALL_CALL(tdc_err)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_TRAILER tdc_trailer;
  {
  FCNCALL_SUBNAME("tdc_trailer");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer,tdc_trailer.FCNCALL_CALL(tdc_trailer)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_FRS

#ifndef USER_DEF_MAIN_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(MAIN_CRATE_DATA)::FCNCALL_NAME(MAIN_CRATE_DATA)
{
  FCNCALL_INIT;
  // BARRIER barrier[3];
  {
  FCNCALL_SUBNAME("barrier");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(barrier__i0,,__i0,barrier[__i0].FCNCALL_CALL(barrier[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V830_FRS v830;
  {
  FCNCALL_SUBNAME("v830");
  { FCNCALL_CALL_CTRL_WRAP(v830,v830.FCNCALL_CALL(v830)); }
  FCNCALL_SUBNAME_END;
  }
  // ZERO_FILLER filler[1];
  {
  FCNCALL_SUBNAME("filler");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(filler__i0,,__i0,filler[__i0].FCNCALL_CALL(filler[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V792_FRS v792;
  {
  FCNCALL_SUBNAME("v792");
  { FCNCALL_CALL_CTRL_WRAP(v792,v792.FCNCALL_CALL(v792)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_FRS v1290;
  {
  FCNCALL_SUBNAME("v1290");
  { FCNCALL_CALL_CTRL_WRAP(v1290,v1290.FCNCALL_CALL(v1290)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_MAIN_CRATE_DATA

#ifndef USER_DEF_MESYTEC_MQDC32_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(MESYTEC_MQDC32_FRS)::FCNCALL_NAME(MESYTEC_MQDC32_FRS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_MESYTEC_MQDC32_FRS

#ifndef USER_DEF_MESYTEC_MTDC32_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(MESYTEC_MTDC32_FRS)::FCNCALL_NAME(MESYTEC_MTDC32_FRS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,34> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_MESYTEC_MTDC32_FRS

#ifndef USER_DEF_SIS_3820_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SIS_3820_FRS)::FCNCALL_NAME(SIS_3820_FRS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SIS_3820_FRS

#ifndef USER_DEF_TAMEX4_EPOCH_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_EPOCH_DATA)::FCNCALL_NAME(TAMEX4_EPOCH_DATA)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_EPOCH_DATA

#ifndef USER_DEF_TAMEX4_HEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_HEADER)::FCNCALL_NAME(TAMEX4_HEADER)
{
  FCNCALL_INIT;
  // raw_list_ii_zero_suppress<DATA16,DATA16,64> post_trig_ns;
  {
  FCNCALL_SUBNAME("post_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(post_trig_ns,post_trig_ns.FCNCALL_CALL(post_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,64> pre_trig_ns;
  {
  FCNCALL_SUBNAME("pre_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(pre_trig_ns,pre_trig_ns.FCNCALL_CALL(pre_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_HEADER

#ifndef USER_DEF_TAMEX4_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_PADDING)::FCNCALL_NAME(TAMEX4_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_PADDING

#ifndef USER_DEF_TAMEX4_TIME_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_TIME_DATA)::FCNCALL_NAME(TAMEX4_TIME_DATA)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_TIME_DATA

#ifndef USER_DEF_TAMEX4_SFP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_SFP)::FCNCALL_NAME(TAMEX4_SFP)
{
  FCNCALL_INIT;
  // DATA32 event_size;
  {
  FCNCALL_SUBNAME("event_size");
  { FCNCALL_CALL_CTRL_WRAP(event_size,event_size.FCNCALL_CALL(event_size)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_edge;
  {
  FCNCALL_SUBNAME("time_edge");
  { FCNCALL_CALL_CTRL_WRAP(time_edge,time_edge.FCNCALL_CALL(time_edge)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_channel;
  {
  FCNCALL_SUBNAME("time_channel");
  { FCNCALL_CALL_CTRL_WRAP(time_channel,time_channel.FCNCALL_CALL(time_channel)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,1024> time_epoch;
  {
  FCNCALL_SUBNAME("time_epoch");
  { FCNCALL_CALL_CTRL_WRAP(time_epoch,time_epoch.FCNCALL_CALL(time_epoch)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_EPOCH_DATA epoch;
  {
  FCNCALL_SUBNAME("epoch");
  { FCNCALL_CALL_CTRL_WRAP(epoch,epoch.FCNCALL_CALL(epoch)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_TIME_DATA time;
  {
  FCNCALL_SUBNAME("time");
  { FCNCALL_CALL_CTRL_WRAP(time,time.FCNCALL_CALL(time)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_SFP

#ifndef USER_DEF_TDC_DATA_V1190
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_DATA_V1190)::FCNCALL_NAME(TDC_DATA_V1190)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_DATA_V1190

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT)
{
  FCNCALL_INIT;
  // DATA12 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT_EXTENDED)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT_EXTENDED)
{
  FCNCALL_INIT;
  // DATA16 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED

#ifndef USER_DEF_VME_CAEN_V7X5_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V7X5_FRS)::FCNCALL_NAME(VME_CAEN_V7X5_FRS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,32> channel;
  {
  FCNCALL_SUBNAME("channel");
  { FCNCALL_CALL_CTRL_WRAP(channel,channel.FCNCALL_CALL(channel)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,32> geo;
  {
  FCNCALL_SUBNAME("geo");
  { FCNCALL_CALL_CTRL_WRAP(geo,geo.FCNCALL_CALL(geo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V7X5_FRS

#ifndef USER_DEF_VME_CAEN_V1190_FRS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_FRS)::FCNCALL_NAME(VME_CAEN_V1190_FRS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
  {
  FCNCALL_SUBNAME("leadOrTrail");
  { FCNCALL_CALL_CTRL_WRAP(leadOrTrail,leadOrTrail.FCNCALL_CALL(leadOrTrail)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_HEADER tdc_header;
  {
  FCNCALL_SUBNAME("tdc_header");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header,tdc_header.FCNCALL_CALL(tdc_header)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_DATA_V1190 measurement;
  {
  FCNCALL_SUBNAME("measurement");
  { FCNCALL_CALL_CTRL_WRAP(measurement,measurement.FCNCALL_CALL(measurement)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_ERROR tdc_error;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(tdc_error,tdc_error.FCNCALL_CALL(tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_TRAILER tdc_trailer;
  {
  FCNCALL_SUBNAME("tdc_trailer");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer,tdc_trailer.FCNCALL_CALL(tdc_trailer)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_FRS

#ifndef USER_DEF_TPC_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TPC_CRATE_DATA)::FCNCALL_NAME(TPC_CRATE_DATA)
{
  FCNCALL_INIT;
  // BARRIER barrier[3];
  {
  FCNCALL_SUBNAME("barrier");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(barrier__i0,,__i0,barrier[__i0].FCNCALL_CALL(barrier[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5_FRS v775;
  {
  FCNCALL_SUBNAME("v775");
  { FCNCALL_CALL_CTRL_WRAP(v775,v775.FCNCALL_CALL(v775)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5_FRS v785;
  {
  FCNCALL_SUBNAME("v785");
  { FCNCALL_CALL_CTRL_WRAP(v785,v785.FCNCALL_CALL(v785)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_FRS v1190;
  {
  FCNCALL_SUBNAME("v1190");
  { FCNCALL_CALL_CTRL_WRAP(v1190,v1190.FCNCALL_CALL(v1190)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TPC_CRATE_DATA

#ifndef USER_DEF_TRIG3EVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRIG3EVENT)::FCNCALL_NAME(TRIG3EVENT)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TRIG3EVENT

#ifndef USER_DEF_USER_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(USER_CRATE_DATA)::FCNCALL_NAME(USER_CRATE_DATA)
{
  FCNCALL_INIT;
  // BARRIER barrier[5];
  {
  FCNCALL_SUBNAME("barrier");
  FCNCALL_FOR(__i0,5)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(barrier__i0,,__i0,barrier[__i0].FCNCALL_CALL(barrier[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V830_FRS v830;
  {
  FCNCALL_SUBNAME("v830");
  { FCNCALL_CALL_CTRL_WRAP(v830,v830.FCNCALL_CALL(v830)); }
  FCNCALL_SUBNAME_END;
  }
  // ZERO_FILLER filler[1];
  {
  FCNCALL_SUBNAME("filler");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(filler__i0,,__i0,filler[__i0].FCNCALL_CALL(filler[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5_FRS v775[2];
  {
  FCNCALL_SUBNAME("v775");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(v775__i0,,__i0,v775[__i0].FCNCALL_CALL(v775[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5_FRS v785[2];
  {
  FCNCALL_SUBNAME("v785");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(v785__i0,,__i0,v785[__i0].FCNCALL_CALL(v785[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_USER_CRATE_DATA

#ifndef USER_DEF_VFTX2
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VFTX2)::FCNCALL_NAME(VFTX2)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VFTX2

#ifndef USER_DEF_VFTX_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VFTX_CRATE_DATA)::FCNCALL_NAME(VFTX_CRATE_DATA)
{
  FCNCALL_INIT;
  // MESYTEC_MQDC32_FRS mqdc0;
  {
  FCNCALL_SUBNAME("mqdc0");
  { FCNCALL_CALL_CTRL_WRAP(mqdc0,mqdc0.FCNCALL_CALL(mqdc0)); }
  FCNCALL_SUBNAME_END;
  }
  // MESYTEC_MQDC32_FRS mqdc1;
  {
  FCNCALL_SUBNAME("mqdc1");
  { FCNCALL_CALL_CTRL_WRAP(mqdc1,mqdc1.FCNCALL_CALL(mqdc1)); }
  FCNCALL_SUBNAME_END;
  }
  // VFTX2 vftx;
  {
  FCNCALL_SUBNAME("vftx");
  { FCNCALL_CALL_CTRL_WRAP(vftx,vftx.FCNCALL_CALL(vftx)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier[3];
  {
  FCNCALL_SUBNAME("barrier");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(barrier__i0,,__i0,barrier[__i0].FCNCALL_CALL(barrier[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // MESYTEC_MTDC32_FRS mtdc;
  {
  FCNCALL_SUBNAME("mtdc");
  { FCNCALL_CALL_CTRL_WRAP(mtdc,mtdc.FCNCALL_CALL(mtdc)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VFTX_CRATE_DATA

#ifndef USER_DEF_WR_MULTI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(WR_MULTI)::FCNCALL_NAME(WR_MULTI)
{
  FCNCALL_INIT;
  // DATA32 time_hi;
  {
  FCNCALL_SUBNAME("time_hi");
  { FCNCALL_CALL_CTRL_WRAP(time_hi,time_hi.FCNCALL_CALL(time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 time_lo;
  {
  FCNCALL_SUBNAME("time_lo");
  { FCNCALL_CALL_CTRL_WRAP(time_lo,time_lo.FCNCALL_CALL(time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_aida_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(aida_subev)::FCNCALL_NAME(aida_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // EXT_AIDA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_aida_subev

#ifndef USER_DEF_bplast_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(bplast_subev)::FCNCALL_NAME(bplast_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TAMEX4_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_SFP tamex[3];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_HEADER trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window,trigger_window.FCNCALL_CALL(trigger_window)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_bplast_subev

#ifndef USER_DEF_fatima_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fatima_tamex_subev)::FCNCALL_NAME(fatima_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TAMEX4_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_SFP tamex[2];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT_EXTENDED ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_HEADER trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window,trigger_window.FCNCALL_CALL(trigger_window)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fatima_tamex_subev

#ifndef USER_DEF_febex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(febex_subev)::FCNCALL_NAME(febex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FEBEX_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENT data[4];
  {
  FCNCALL_SUBNAME("data");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(data__i0,,__i0,data[__i0].FCNCALL_CALL(data[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_febex_subev

#ifndef USER_DEF_frs_main_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_main_subev)::FCNCALL_NAME(frs_main_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT wr;
  {
  FCNCALL_SUBNAME("wr");
  { FCNCALL_CALL_CTRL_WRAP(wr,wr.FCNCALL_CALL(wr)); }
  FCNCALL_SUBNAME_END;
  }
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // MAIN_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_main_subev

#ifndef USER_DEF_frs_tpc_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_tpc_subev)::FCNCALL_NAME(frs_tpc_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // TPC_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_tpc_subev

#ifndef USER_DEF_frs_user_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_user_subev)::FCNCALL_NAME(frs_user_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // USER_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_user_subev

#ifndef USER_DEF_frs_vftx_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_vftx_subev)::FCNCALL_NAME(frs_vftx_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // VFTX_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_vftx_subev

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // aida_subev aida;
  {
  FCNCALL_SUBNAME("aida");
  { FCNCALL_CALL_CTRL_WRAP(aida,aida.FCNCALL_CALL(aida)); }
  FCNCALL_SUBNAME_END;
  }
  // fatima_tamex_subev fatima;
  {
  FCNCALL_SUBNAME("fatima");
  { FCNCALL_CALL_CTRL_WRAP(fatima,fatima.FCNCALL_CALL(fatima)); }
  FCNCALL_SUBNAME_END;
  }
  // bplast_subev bplast;
  {
  FCNCALL_SUBNAME("bplast");
  { FCNCALL_CALL_CTRL_WRAP(bplast,bplast.FCNCALL_CALL(bplast)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_main_subev frsmain;
  {
  FCNCALL_SUBNAME("frsmain");
  { FCNCALL_CALL_CTRL_WRAP(frsmain,frsmain.FCNCALL_CALL(frsmain)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_tpc_subev frstpc;
  {
  FCNCALL_SUBNAME("frstpc");
  { FCNCALL_CALL_CTRL_WRAP(frstpc,frstpc.FCNCALL_CALL(frstpc)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_user_subev frsuser;
  {
  FCNCALL_SUBNAME("frsuser");
  { FCNCALL_CALL_CTRL_WRAP(frsuser,frsuser.FCNCALL_CALL(frsuser)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_vftx_subev frsvftx;
  {
  FCNCALL_SUBNAME("frsvftx");
  { FCNCALL_CALL_CTRL_WRAP(frsvftx,frsvftx.FCNCALL_CALL(frsvftx)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: BARRIER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER
// Corr struct for: DUMMY
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY
// Corr struct for: FEBEX_BAD_EVENT
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENT
// .FEBEX_BAD_EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENT
// .FEBEX_BAD_EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENT
// .FEBEX_BAD_EVENT
// Corr struct for: FEBEX_EVENT
// DATA32  .event_trigger_time_hi
  // ---
// DATA32  .event_trigger_time_lo
  // ---
// DATA16  .hit_pattern
// raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
// raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
  // ---
// raw_array_zero_suppress  .pileup(DATA8)[16]
  // ---
// raw_array_zero_suppress  .overflow(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_cfd(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_energy(DATA32)[16]
  // ---
// DATA16 .hit_pattern
// DATA16 .channel_trigger_time_hi[16]
// 
// size= 1  chunks= 17  mem=  17  line=34  total=578
// size=16  chunks=  2  mem=  32  line=34  total=578
// size=17  chunks=  1  mem=  17  line=18  total=306
// 
// corr structure: FEBEX_EVENT
  // DATA16 .hit_pattern
  // DATA16 .channel_trigger_time_hi[16]
// .FEBEX_EVENT/17/.hit_pattern
                // .channel_trigger_time_hi/16/[16]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT
// .FEBEX_EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT
// .FEBEX_EVENT
// Corr struct for: FEBEX_EVENT_TRACES
// DATA32  .event_trigger_time_hi
  // ---
// DATA32  .event_trigger_time_lo
  // ---
// DATA16  .hit_pattern
// DATA32  .num_channels_fired
  // ---
// raw_array_zero_suppress  .channel_id(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
// raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
  // ---
// raw_array  .pileup(DATA8)[16]
  // ---
// raw_array  .overflow(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_cfd(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_energy(DATA32)[16]
  // ---
// raw_array_zero_suppress  .traces[16](DATA16)[10000]
// DUMMY  .dummy
// DATA16 .hit_pattern
// DATA16 .channel_trigger_time_hi[16]
// DATA16 .traces[16][10000]
// 
// size= 1  chunks=160017  mem=160017  line=320034  total=-328726974
// size=16  chunks=160002  mem=2560032  line=2720034  total=1459983682
// size=10000  chunks= 18  mem=180000  line=180018  total=-1258830766
// size=160000  chunks=  3  mem=480000  line=480003  total=-500771277
// size=160017  chunks=  1  mem=160017  line=160018  total=-164203470
// 
// corr structure: FEBEX_EVENT_TRACES
  // DATA16 .hit_pattern
  // DATA16 .channel_trigger_time_hi[16]
  // DATA16 .traces[16][10000]
// .FEBEX_EVENT_TRACES/160017/.hit_pattern
                           // .channel_trigger_time_hi/16/[16]
                           // .traces/160000/[16]/10000/[10000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT_TRACES
// .FEBEX_EVENT_TRACES// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT_TRACES
// .FEBEX_EVENT_TRACES
// Corr struct for: FEBEX_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING
// Corr struct for: VME_CAEN_V830_FRS
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830_FRS
// .VME_CAEN_V830_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830_FRS
// .VME_CAEN_V830_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830_FRS
// .VME_CAEN_V830_FRS
// Corr struct for: ZERO_FILLER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ZERO_FILLER
// .ZERO_FILLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ZERO_FILLER
// .ZERO_FILLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ZERO_FILLER
// .ZERO_FILLER
// Corr struct for: VME_CAEN_V792_FRS
// raw_array_multi_zero_suppress  .data(DATA32)[32][32]
  // ---
// DATA8  .geo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V792_FRS
// .VME_CAEN_V792_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V792_FRS
// .VME_CAEN_V792_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V792_FRS
// .VME_CAEN_V792_FRS
// Corr struct for: TDC_HEADER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_HEADER
// .TDC_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_HEADER
// .TDC_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_HEADER
// .TDC_HEADER
// Corr struct for: TDC_DATA_V1290
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1290
// .TDC_DATA_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1290
// .TDC_DATA_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1290
// .TDC_DATA_V1290
// Corr struct for: TDC_ERROR
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_ERROR
// .TDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_ERROR
// .TDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_ERROR
// .TDC_ERROR
// Corr struct for: TDC_TRAILER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_TRAILER
// .TDC_TRAILER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_TRAILER
// .TDC_TRAILER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_TRAILER
// .TDC_TRAILER
// Corr struct for: VME_CAEN_V1290_FRS
// raw_array_multi_zero_suppress  .data(DATA24)[128][128]
  // ---
// raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
  // ---
// TDC_HEADER  .tdc_header
// TDC_DATA_V1290  .measurement
// TDC_ERROR  .tdc_err
// TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_FRS
// .VME_CAEN_V1290_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_FRS
// .VME_CAEN_V1290_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_FRS
// .VME_CAEN_V1290_FRS
// Corr struct for: MAIN_CRATE_DATA
// BARRIER  .barrier[3]
// VME_CAEN_V830_FRS  .v830
  // raw_array_zero_suppress  .data(DATA32)[32]
    // ---
// ZERO_FILLER  .filler[1]
// VME_CAEN_V792_FRS  .v792
  // raw_array_multi_zero_suppress  .data(DATA32)[32][32]
    // ---
  // DATA8  .geo
    // ---
// VME_CAEN_V1290_FRS  .v1290
  // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
    // ---
  // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
    // ---
  // TDC_HEADER  .tdc_header
  // TDC_DATA_V1290  .measurement
  // TDC_ERROR  .tdc_err
  // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MAIN_CRATE_DATA
// .MAIN_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MAIN_CRATE_DATA
// .MAIN_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MAIN_CRATE_DATA
// .MAIN_CRATE_DATA
// Corr struct for: MESYTEC_MQDC32_FRS
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// DATA12_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: MESYTEC_MQDC32_FRS
  // DATA12_OVERFLOW .data[32]
// .MESYTEC_MQDC32_FRS/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MESYTEC_MQDC32_FRS
// .MESYTEC_MQDC32_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MESYTEC_MQDC32_FRS
// .MESYTEC_MQDC32_FRS
// Corr struct for: MESYTEC_MTDC32_FRS
// raw_array_zero_suppress  .data(DATA16)[34]
// DATA16 .data[34]
// 
// size= 1  chunks= 34  mem=  34  line=68  total=2312
// size=34  chunks=  1  mem=  34  line=35  total=1190
// 
// corr structure: MESYTEC_MTDC32_FRS
  // DATA16 .data[34]
// .MESYTEC_MTDC32_FRS/34/.data/34/[34]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MESYTEC_MTDC32_FRS
// .MESYTEC_MTDC32_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MESYTEC_MTDC32_FRS
// .MESYTEC_MTDC32_FRS
// Corr struct for: SIS_3820_FRS
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS_3820_FRS
// .SIS_3820_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS_3820_FRS
// .SIS_3820_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS_3820_FRS
// .SIS_3820_FRS
// Corr struct for: TAMEX4_EPOCH_DATA
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_EPOCH_DATA
// .TAMEX4_EPOCH_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_EPOCH_DATA
// .TAMEX4_EPOCH_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_EPOCH_DATA
// .TAMEX4_EPOCH_DATA
// Corr struct for: TAMEX4_HEADER
// raw_list_ii_zero_suppress  .post_trig_ns(DATA16)[64]
// raw_list_ii_zero_suppress  .pre_trig_ns(DATA16)[64]
// DATA16 .post_trig_ns[64]
// DATA16 .pre_trig_ns[64]
// 
// size= 1  chunks=128  mem= 128  line=256  total=32768
// size=64  chunks=  2  mem= 128  line=130  total=16640
// size=128  chunks=  1  mem= 128  line=129  total=16512
// 
// corr structure: TAMEX4_HEADER
  // DATA16 .post_trig_ns[64]
  // DATA16 .pre_trig_ns[64]
// .TAMEX4_HEADER/128/.post_trig_ns/64/[64]
                   // .pre_trig_ns/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_HEADER
// .TAMEX4_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_HEADER
// .TAMEX4_HEADER
// Corr struct for: TAMEX4_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_PADDING
// .TAMEX4_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_PADDING
// .TAMEX4_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_PADDING
// .TAMEX4_PADDING
// Corr struct for: TAMEX4_TIME_DATA
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_TIME_DATA
// .TAMEX4_TIME_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_TIME_DATA
// .TAMEX4_TIME_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_TIME_DATA
// .TAMEX4_TIME_DATA
// Corr struct for: TAMEX4_SFP
// DATA32  .event_size
  // ---
// raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
  // ---
// TAMEX4_EPOCH_DATA  .epoch
// TAMEX4_TIME_DATA  .time
// DATA12 .time_coarse[1024]
// DATA12 .time_fine[1024]
// DATA12 .time_edge[1024]
// DATA12 .time_channel[1024]
// 
// size= 1  chunks=4096  mem=4096  line=8192  total=33554432
// size=1024  chunks=  4  mem=4096  line=4100  total=16793600
// size=4096  chunks=  1  mem=4096  line=4097  total=16781312
// 
// corr structure: TAMEX4_SFP
  // DATA12 .time_coarse[1024]
  // DATA12 .time_fine[1024]
  // DATA12 .time_edge[1024]
  // DATA12 .time_channel[1024]
// .TAMEX4_SFP/4096/.time_coarse/1024/[1024]
                 // .time_fine/1024/[1024]
                 // .time_edge/1024/[1024]
                 // .time_channel/1024/[1024]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_SFP
// .TAMEX4_SFP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_SFP
// .TAMEX4_SFP
// Corr struct for: TDC_DATA_V1190
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1190
// .TDC_DATA_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1190
// .TDC_DATA_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1190
// .TDC_DATA_V1190
// Corr struct for: TIMESTAMP_WHITERABBIT
// DATA12  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA12 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT
  // DATA12 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT
// Corr struct for: TIMESTAMP_WHITERABBIT_EXTENDED
// DATA16  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA16 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
  // DATA16 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT_EXTENDED/5/.subsystem_id
                                  // .t1
                                  // .t2
                                  // .t3
                                  // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
// .TIMESTAMP_WHITERABBIT_EXTENDED// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
// .TIMESTAMP_WHITERABBIT_EXTENDED
// Corr struct for: VME_CAEN_V7X5_FRS
// raw_array_zero_suppress  .data(DATA24)[32]
  // ---
// raw_array_zero_suppress  .channel(DATA8)[32]
  // ---
// raw_array_zero_suppress  .geo(DATA8)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V7X5_FRS
// .VME_CAEN_V7X5_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V7X5_FRS
// .VME_CAEN_V7X5_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V7X5_FRS
// .VME_CAEN_V7X5_FRS
// Corr struct for: VME_CAEN_V1190_FRS
// raw_array_multi_zero_suppress  .data(DATA24)[128][128]
  // ---
// raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
  // ---
// TDC_HEADER  .tdc_header
// TDC_DATA_V1190  .measurement
// TDC_ERROR  .tdc_error
// TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_FRS
// .VME_CAEN_V1190_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_FRS
// .VME_CAEN_V1190_FRS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_FRS
// .VME_CAEN_V1190_FRS
// Corr struct for: TPC_CRATE_DATA
// BARRIER  .barrier[3]
// VME_CAEN_V7X5_FRS  .v775
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
  // raw_array_zero_suppress  .channel(DATA8)[32]
    // ---
  // raw_array_zero_suppress  .geo(DATA8)[32]
    // ---
// VME_CAEN_V7X5_FRS  .v785
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
  // raw_array_zero_suppress  .channel(DATA8)[32]
    // ---
  // raw_array_zero_suppress  .geo(DATA8)[32]
    // ---
// VME_CAEN_V1190_FRS  .v1190
  // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
    // ---
  // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
    // ---
  // TDC_HEADER  .tdc_header
  // TDC_DATA_V1190  .measurement
  // TDC_ERROR  .tdc_error
  // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPC_CRATE_DATA
// .TPC_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPC_CRATE_DATA
// .TPC_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPC_CRATE_DATA
// .TPC_CRATE_DATA
// Corr struct for: TRIG3EVENT
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIG3EVENT
// .TRIG3EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIG3EVENT
// .TRIG3EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIG3EVENT
// .TRIG3EVENT
// Corr struct for: USER_CRATE_DATA
// BARRIER  .barrier[5]
// VME_CAEN_V830_FRS  .v830
  // raw_array_zero_suppress  .data(DATA32)[32]
    // ---
// ZERO_FILLER  .filler[1]
// VME_CAEN_V7X5_FRS  .v775[2]
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
  // raw_array_zero_suppress  .channel(DATA8)[32]
    // ---
  // raw_array_zero_suppress  .geo(DATA8)[32]
    // ---
// VME_CAEN_V7X5_FRS  .v785[2]
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
  // raw_array_zero_suppress  .channel(DATA8)[32]
    // ---
  // raw_array_zero_suppress  .geo(DATA8)[32]
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: USER_CRATE_DATA
// .USER_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: USER_CRATE_DATA
// .USER_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: USER_CRATE_DATA
// .USER_CRATE_DATA
// Corr struct for: VFTX2
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
// DATA16  .time_trigger
// DATA12 .time_fine[32][100]
// DATA16 .time_coarse[32][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=6401  mem=6401  line=12802  total=81945602
// size=100  chunks= 65  mem=6500  line=6565  total=42022565
// size=3200  chunks=  3  mem=9600  line=9603  total=61468803
// size=6401  chunks=  1  mem=6401  line=6402  total=40979202
// 
// corr structure: VFTX2
  // DATA12 .time_fine[32][100]
  // DATA16 .time_coarse[32][100]
  // DATA16 .time_trigger
// .VFTX2/6401/.time_fine/3200/[32]/100/[100]
            // .time_coarse/3200/[32]/100/[100]
            // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX2
// .VFTX2// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX2
// .VFTX2
// Corr struct for: VFTX_CRATE_DATA
// MESYTEC_MQDC32_FRS  .mqdc0
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// MESYTEC_MQDC32_FRS  .mqdc1
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// VFTX2  .vftx
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
// BARRIER  .barrier[3]
// MESYTEC_MTDC32_FRS  .mtdc
  // raw_array_zero_suppress  .data(DATA16)[34]
// DATA12_OVERFLOW .mqdc0.data[32]
// DATA12_OVERFLOW .mqdc1.data[32]
// DATA12 .vftx.time_fine[32][100]
// DATA16 .vftx.time_coarse[32][100]
// DATA16 .vftx.time_trigger
// DATA16 .mtdc.data[34]
// 
// size= 1  chunks=6499  mem=6499  line=12998  total=84474002
// size=32  chunks=6437  mem=205984  line=212421  total=1380524079
// size=34  chunks=6404  mem=217736  line=224140  total=1456685860
// size=100  chunks= 68  mem=6800  line=6868  total=44635132
// size=3200  chunks=  6  mem=19200  line=19206  total=124819794
// size=6401  chunks=  4  mem=25604  line=25608  total=166426392
// size=6499  chunks=  1  mem=6499  line=6500  total=42243500
// 
// corr structure: VFTX_CRATE_DATA
  // DATA12_OVERFLOW .mqdc0.data[32]
  // DATA12_OVERFLOW .mqdc1.data[32]
  // DATA12 .vftx.time_fine[32][100]
  // DATA16 .vftx.time_coarse[32][100]
  // DATA16 .vftx.time_trigger
  // DATA16 .mtdc.data[34]
// .VFTX_CRATE_DATA/6499/.mqdc0/32/.data/32/[32]
                      // .mqdc1/32/.data/32/[32]
                      // .vftx/6401/.time_fine/3200/[32]/100/[100]
                                 // .time_coarse/3200/[32]/100/[100]
                                 // .time_trigger
                      // .mtdc/34/.data/34/[34]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX_CRATE_DATA
// .VFTX_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX_CRATE_DATA
// .VFTX_CRATE_DATA
// Corr struct for: WR_MULTI
// DATA32  .time_hi
  // ---
// DATA32  .time_lo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI
// Corr struct for: aida_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// EXT_AIDA  .data
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: aida_subev
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .aida_subev/5/.ts/5/.subsystem_id
                    // .t1
                    // .t2
                    // .t3
                    // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: aida_subev
// .aida_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: aida_subev
// .aida_subev
// Corr struct for: bplast_subev
//  : public unpack_subevent_base
// ---
// TAMEX4_PADDING  .padding
// TAMEX4_SFP  .tamex[3]
  // DATA32  .event_size
    // ---
  // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
    // ---
  // TAMEX4_EPOCH_DATA  .epoch
  // TAMEX4_TIME_DATA  .time
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// TAMEX4_HEADER  .trigger_window
  // raw_list_ii_zero_suppress  .post_trig_ns(DATA16)[64]
  // raw_list_ii_zero_suppress  .pre_trig_ns(DATA16)[64]
// DATA12 .tamex[3].time_coarse[1024]
// DATA12 .tamex[3].time_fine[1024]
// DATA12 .tamex[3].time_edge[1024]
// DATA12 .tamex[3].time_channel[1024]
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .trigger_window.post_trig_ns[64]
// DATA16 .trigger_window.pre_trig_ns[64]
// 
// size= 1  chunks=12421  mem=12421  line=24842  total=308562482
// size= 5  chunks=12417  mem=62085  line=74502  total=925389342
// size=64  chunks=12291  mem=786624  line=798915  total=1333388623
// size=128  chunks=12290  mem=1573120  line=1585410  total=-1782458870
// size=1024  chunks= 14  mem=14336  line=14350  total=178241350
// size=4096  chunks=  5  mem=20480  line=20485  total=254444185
// size=12288  chunks=  3  mem=36864  line=36867  total=457925007
// size=12421  chunks=  1  mem=12421  line=12422  total=154293662
// 
// corr structure: bplast_subev
  // DATA12 .tamex[3].time_coarse[1024]
  // DATA12 .tamex[3].time_fine[1024]
  // DATA12 .tamex[3].time_edge[1024]
  // DATA12 .tamex[3].time_channel[1024]
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .trigger_window.post_trig_ns[64]
  // DATA16 .trigger_window.pre_trig_ns[64]
// .bplast_subev/12421/.tamex/12288/[3]/4096/.time_coarse/1024/[1024]
                                          // .time_fine/1024/[1024]
                                          // .time_edge/1024/[1024]
                                          // .time_channel/1024/[1024]
                    // .ts/5/.subsystem_id
                          // .t1
                          // .t2
                          // .t3
                          // .t4
                    // .trigger_window/128/.post_trig_ns/64/[64]
                                        // .pre_trig_ns/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bplast_subev
// .bplast_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bplast_subev
// .bplast_subev
// Corr struct for: fatima_tamex_subev
//  : public unpack_subevent_base
// ---
// TAMEX4_PADDING  .padding
// TAMEX4_SFP  .tamex[2]
  // DATA32  .event_size
    // ---
  // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
    // ---
  // TAMEX4_EPOCH_DATA  .epoch
  // TAMEX4_TIME_DATA  .time
// TIMESTAMP_WHITERABBIT_EXTENDED  .ts
  // DATA16  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// TAMEX4_HEADER  .trigger_window
  // raw_list_ii_zero_suppress  .post_trig_ns(DATA16)[64]
  // raw_list_ii_zero_suppress  .pre_trig_ns(DATA16)[64]
// DATA12 .tamex[2].time_coarse[1024]
// DATA12 .tamex[2].time_fine[1024]
// DATA12 .tamex[2].time_edge[1024]
// DATA12 .tamex[2].time_channel[1024]
// DATA16 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .trigger_window.post_trig_ns[64]
// DATA16 .trigger_window.pre_trig_ns[64]
// 
// size= 1  chunks=8325  mem=8325  line=16650  total=138611250
// size= 5  chunks=8321  mem=41605  line=49926  total=415633950
// size=64  chunks=8195  mem=524480  line=532675  total=139552079
// size=128  chunks=8194  mem=1048832  line=1057026  total=209806858
// size=1024  chunks= 10  mem=10240  line=10250  total=85331250
// size=4096  chunks=  4  mem=16384  line=16388  total=136430100
// size=8192  chunks=  3  mem=24576  line=24579  total=204620175
// size=8325  chunks=  1  mem=8325  line=8326  total=69313950
// 
// corr structure: fatima_tamex_subev
  // DATA12 .tamex[2].time_coarse[1024]
  // DATA12 .tamex[2].time_fine[1024]
  // DATA12 .tamex[2].time_edge[1024]
  // DATA12 .tamex[2].time_channel[1024]
  // DATA16 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .trigger_window.post_trig_ns[64]
  // DATA16 .trigger_window.pre_trig_ns[64]
// .fatima_tamex_subev/8325/.tamex/8192/[2]/4096/.time_coarse/1024/[1024]
                                              // .time_fine/1024/[1024]
                                              // .time_edge/1024/[1024]
                                              // .time_channel/1024/[1024]
                         // .ts/5/.subsystem_id
                               // .t1
                               // .t2
                               // .t3
                               // .t4
                         // .trigger_window/128/.post_trig_ns/64/[64]
                                             // .pre_trig_ns/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fatima_tamex_subev
// .fatima_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fatima_tamex_subev
// .fatima_tamex_subev
// Corr struct for: febex_subev
//  : public unpack_subevent_base
// ---
// FEBEX_PADDING  .padding
// FEBEX_EVENT  .data[4]
  // DATA32  .event_trigger_time_hi
    // ---
  // DATA32  .event_trigger_time_lo
    // ---
  // DATA16  .hit_pattern
  // raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
  // raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
    // ---
  // raw_array_zero_suppress  .pileup(DATA8)[16]
    // ---
  // raw_array_zero_suppress  .overflow(DATA8)[16]
    // ---
  // raw_array_zero_suppress  .channel_cfd(DATA8)[16]
    // ---
  // raw_array_zero_suppress  .channel_energy(DATA32)[16]
    // ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA16 .data[4].hit_pattern
// DATA16 .data[4].channel_trigger_time_hi[16]
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks= 73  mem=  73  line=146  total=10658
// size= 5  chunks= 69  mem= 345  line=414  total=30222
// size=16  chunks=  9  mem= 144  line=153  total=11169
// size=17  chunks=  5  mem=  85  line=90  total=6570
// size=68  chunks=  2  mem= 136  line=138  total=10074
// size=73  chunks=  1  mem=  73  line=74  total=5402
// 
// corr structure: febex_subev
  // DATA16 .data[4].hit_pattern
  // DATA16 .data[4].channel_trigger_time_hi[16]
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .febex_subev/73/.data/68/[4]/17/.hit_pattern
                                // .channel_trigger_time_hi/16/[16]
                // .ts/5/.subsystem_id
                      // .t1
                      // .t2
                      // .t3
                      // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: febex_subev
// .febex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: febex_subev
// .febex_subev
// Corr struct for: frs_main_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .wr
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// TRIG3EVENT  .trig3
// MAIN_CRATE_DATA  .data
  // BARRIER  .barrier[3]
  // VME_CAEN_V830_FRS  .v830
    // raw_array_zero_suppress  .data(DATA32)[32]
      // ---
  // ZERO_FILLER  .filler[1]
  // VME_CAEN_V792_FRS  .v792
    // raw_array_multi_zero_suppress  .data(DATA32)[32][32]
      // ---
    // DATA8  .geo
      // ---
  // VME_CAEN_V1290_FRS  .v1290
    // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
      // ---
    // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
      // ---
    // TDC_HEADER  .tdc_header
    // TDC_DATA_V1290  .measurement
    // TDC_ERROR  .tdc_err
    // TDC_TRAILER  .tdc_trailer
// DATA12 .wr.subsystem_id
// DATA16 .wr.t1
// DATA16 .wr.t2
// DATA16 .wr.t3
// DATA16 .wr.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: frs_main_subev
  // DATA12 .wr.subsystem_id
  // DATA16 .wr.t1
  // DATA16 .wr.t2
  // DATA16 .wr.t3
  // DATA16 .wr.t4
// .frs_main_subev/5/.wr/5/.subsystem_id
                        // .t1
                        // .t2
                        // .t3
                        // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_main_subev
// .frs_main_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_main_subev
// .frs_main_subev
// Corr struct for: frs_tpc_subev
//  : public unpack_subevent_base
// ---
// TRIG3EVENT  .trig3
// TPC_CRATE_DATA  .data
  // BARRIER  .barrier[3]
  // VME_CAEN_V7X5_FRS  .v775
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
    // raw_array_zero_suppress  .channel(DATA8)[32]
      // ---
    // raw_array_zero_suppress  .geo(DATA8)[32]
      // ---
  // VME_CAEN_V7X5_FRS  .v785
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
    // raw_array_zero_suppress  .channel(DATA8)[32]
      // ---
    // raw_array_zero_suppress  .geo(DATA8)[32]
      // ---
  // VME_CAEN_V1190_FRS  .v1190
    // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
      // ---
    // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
      // ---
    // TDC_HEADER  .tdc_header
    // TDC_DATA_V1190  .measurement
    // TDC_ERROR  .tdc_error
    // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpc_subev
// .frs_tpc_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpc_subev
// .frs_tpc_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpc_subev
// .frs_tpc_subev
// Corr struct for: frs_user_subev
//  : public unpack_subevent_base
// ---
// TRIG3EVENT  .trig3
// USER_CRATE_DATA  .data
  // BARRIER  .barrier[5]
  // VME_CAEN_V830_FRS  .v830
    // raw_array_zero_suppress  .data(DATA32)[32]
      // ---
  // ZERO_FILLER  .filler[1]
  // VME_CAEN_V7X5_FRS  .v775[2]
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
    // raw_array_zero_suppress  .channel(DATA8)[32]
      // ---
    // raw_array_zero_suppress  .geo(DATA8)[32]
      // ---
  // VME_CAEN_V7X5_FRS  .v785[2]
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
    // raw_array_zero_suppress  .channel(DATA8)[32]
      // ---
    // raw_array_zero_suppress  .geo(DATA8)[32]
      // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_user_subev
// .frs_user_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_user_subev
// .frs_user_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_user_subev
// .frs_user_subev
// Corr struct for: frs_vftx_subev
//  : public unpack_subevent_base
// ---
// TRIG3EVENT  .trig3
// VFTX_CRATE_DATA  .data
  // MESYTEC_MQDC32_FRS  .mqdc0
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
  // MESYTEC_MQDC32_FRS  .mqdc1
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
  // VFTX2  .vftx
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
  // BARRIER  .barrier[3]
  // MESYTEC_MTDC32_FRS  .mtdc
    // raw_array_zero_suppress  .data(DATA16)[34]
// DATA12_OVERFLOW .data.mqdc0.data[32]
// DATA12_OVERFLOW .data.mqdc1.data[32]
// DATA12 .data.vftx.time_fine[32][100]
// DATA16 .data.vftx.time_coarse[32][100]
// DATA16 .data.vftx.time_trigger
// DATA16 .data.mtdc.data[34]
// 
// size= 1  chunks=6499  mem=6499  line=12998  total=84474002
// size=32  chunks=6437  mem=205984  line=212421  total=1380524079
// size=34  chunks=6404  mem=217736  line=224140  total=1456685860
// size=100  chunks= 68  mem=6800  line=6868  total=44635132
// size=3200  chunks=  6  mem=19200  line=19206  total=124819794
// size=6401  chunks=  4  mem=25604  line=25608  total=166426392
// size=6499  chunks=  1  mem=6499  line=6500  total=42243500
// 
// corr structure: frs_vftx_subev
  // DATA12_OVERFLOW .data.mqdc0.data[32]
  // DATA12_OVERFLOW .data.mqdc1.data[32]
  // DATA12 .data.vftx.time_fine[32][100]
  // DATA16 .data.vftx.time_coarse[32][100]
  // DATA16 .data.vftx.time_trigger
  // DATA16 .data.mtdc.data[34]
// .frs_vftx_subev/6499/.data/6499/.mqdc0/32/.data/32/[32]
                                // .mqdc1/32/.data/32/[32]
                                // .vftx/6401/.time_fine/3200/[32]/100/[100]
                                           // .time_coarse/3200/[32]/100/[100]
                                           // .time_trigger
                                // .mtdc/34/.data/34/[34]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_vftx_subev
// .frs_vftx_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_vftx_subev
// .frs_vftx_subev
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// aida_subev  .aida
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // EXT_AIDA  .data
// fatima_tamex_subev  .fatima
  //  : public unpack_subevent_base
  // ---
  // TAMEX4_PADDING  .padding
  // TAMEX4_SFP  .tamex[2]
    // DATA32  .event_size
      // ---
    // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
      // ---
    // TAMEX4_EPOCH_DATA  .epoch
    // TAMEX4_TIME_DATA  .time
  // TIMESTAMP_WHITERABBIT_EXTENDED  .ts
    // DATA16  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // TAMEX4_HEADER  .trigger_window
    // raw_list_ii_zero_suppress  .post_trig_ns(DATA16)[64]
    // raw_list_ii_zero_suppress  .pre_trig_ns(DATA16)[64]
// bplast_subev  .bplast
  //  : public unpack_subevent_base
  // ---
  // TAMEX4_PADDING  .padding
  // TAMEX4_SFP  .tamex[3]
    // DATA32  .event_size
      // ---
    // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
      // ---
    // TAMEX4_EPOCH_DATA  .epoch
    // TAMEX4_TIME_DATA  .time
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // TAMEX4_HEADER  .trigger_window
    // raw_list_ii_zero_suppress  .post_trig_ns(DATA16)[64]
    // raw_list_ii_zero_suppress  .pre_trig_ns(DATA16)[64]
// frs_main_subev  .frsmain
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .wr
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // TRIG3EVENT  .trig3
  // MAIN_CRATE_DATA  .data
    // BARRIER  .barrier[3]
    // VME_CAEN_V830_FRS  .v830
      // raw_array_zero_suppress  .data(DATA32)[32]
        // ---
    // ZERO_FILLER  .filler[1]
    // VME_CAEN_V792_FRS  .v792
      // raw_array_multi_zero_suppress  .data(DATA32)[32][32]
        // ---
      // DATA8  .geo
        // ---
    // VME_CAEN_V1290_FRS  .v1290
      // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
        // ---
      // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
        // ---
      // TDC_HEADER  .tdc_header
      // TDC_DATA_V1290  .measurement
      // TDC_ERROR  .tdc_err
      // TDC_TRAILER  .tdc_trailer
// frs_tpc_subev  .frstpc
  //  : public unpack_subevent_base
  // ---
  // TRIG3EVENT  .trig3
  // TPC_CRATE_DATA  .data
    // BARRIER  .barrier[3]
    // VME_CAEN_V7X5_FRS  .v775
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
      // raw_array_zero_suppress  .channel(DATA8)[32]
        // ---
      // raw_array_zero_suppress  .geo(DATA8)[32]
        // ---
    // VME_CAEN_V7X5_FRS  .v785
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
      // raw_array_zero_suppress  .channel(DATA8)[32]
        // ---
      // raw_array_zero_suppress  .geo(DATA8)[32]
        // ---
    // VME_CAEN_V1190_FRS  .v1190
      // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
        // ---
      // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
        // ---
      // TDC_HEADER  .tdc_header
      // TDC_DATA_V1190  .measurement
      // TDC_ERROR  .tdc_error
      // TDC_TRAILER  .tdc_trailer
// frs_user_subev  .frsuser
  //  : public unpack_subevent_base
  // ---
  // TRIG3EVENT  .trig3
  // USER_CRATE_DATA  .data
    // BARRIER  .barrier[5]
    // VME_CAEN_V830_FRS  .v830
      // raw_array_zero_suppress  .data(DATA32)[32]
        // ---
    // ZERO_FILLER  .filler[1]
    // VME_CAEN_V7X5_FRS  .v775[2]
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
      // raw_array_zero_suppress  .channel(DATA8)[32]
        // ---
      // raw_array_zero_suppress  .geo(DATA8)[32]
        // ---
    // VME_CAEN_V7X5_FRS  .v785[2]
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
      // raw_array_zero_suppress  .channel(DATA8)[32]
        // ---
      // raw_array_zero_suppress  .geo(DATA8)[32]
        // ---
// frs_vftx_subev  .frsvftx
  //  : public unpack_subevent_base
  // ---
  // TRIG3EVENT  .trig3
  // VFTX_CRATE_DATA  .data
    // MESYTEC_MQDC32_FRS  .mqdc0
      // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
    // MESYTEC_MQDC32_FRS  .mqdc1
      // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
    // VFTX2  .vftx
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
      // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
      // DATA16  .time_trigger
    // BARRIER  .barrier[3]
    // MESYTEC_MTDC32_FRS  .mtdc
      // raw_array_zero_suppress  .data(DATA16)[34]
// DATA12 .aida.ts.subsystem_id
// DATA16 .aida.ts.t1
// DATA16 .aida.ts.t2
// DATA16 .aida.ts.t3
// DATA16 .aida.ts.t4
// DATA12 .fatima.tamex[2].time_coarse[1024]
// DATA12 .fatima.tamex[2].time_fine[1024]
// DATA12 .fatima.tamex[2].time_edge[1024]
// DATA12 .fatima.tamex[2].time_channel[1024]
// DATA16 .fatima.ts.subsystem_id
// DATA16 .fatima.ts.t1
// DATA16 .fatima.ts.t2
// DATA16 .fatima.ts.t3
// DATA16 .fatima.ts.t4
// DATA16 .fatima.trigger_window.post_trig_ns[64]
// DATA16 .fatima.trigger_window.pre_trig_ns[64]
// DATA12 .bplast.tamex[3].time_coarse[1024]
// DATA12 .bplast.tamex[3].time_fine[1024]
// DATA12 .bplast.tamex[3].time_edge[1024]
// DATA12 .bplast.tamex[3].time_channel[1024]
// DATA12 .bplast.ts.subsystem_id
// DATA16 .bplast.ts.t1
// DATA16 .bplast.ts.t2
// DATA16 .bplast.ts.t3
// DATA16 .bplast.ts.t4
// DATA16 .bplast.trigger_window.post_trig_ns[64]
// DATA16 .bplast.trigger_window.pre_trig_ns[64]
// DATA12 .frsmain.wr.subsystem_id
// DATA16 .frsmain.wr.t1
// DATA16 .frsmain.wr.t2
// DATA16 .frsmain.wr.t3
// DATA16 .frsmain.wr.t4
// DATA12_OVERFLOW .frsvftx.data.mqdc0.data[32]
// DATA12_OVERFLOW .frsvftx.data.mqdc1.data[32]
// DATA12 .frsvftx.data.vftx.time_fine[32][100]
// DATA16 .frsvftx.data.vftx.time_coarse[32][100]
// DATA16 .frsvftx.data.vftx.time_trigger
// DATA16 .frsvftx.data.mtdc.data[34]
// 
// size= 1  chunks=27255  mem=27255  line=54510  total=1485670050
// size= 5  chunks=27239  mem=136195  line=163434  total=159426374
// size=32  chunks=27177  mem=869664  line=896841  total=-1326402321
// size=34  chunks=27144  mem=922896  line=950040  total=123536424
// size=64  chunks=26892  mem=1721088  line=1747980  total=396554644
// size=100  chunks=20556  mem=2055600  line=2076156  total=751056932
// size=128  chunks=20554  mem=2630912  line=2651466  total=-748738202
// size=1024  chunks= 94  mem=96256  line=96350  total=-1668948046
// size=3200  chunks= 32  mem=102400  line=102432  total=-1503183136
// size=4096  chunks= 17  mem=69632  line=69649  total=1898283495
// size=6401  chunks= 15  mem=96015  line=96030  total=-1677669646
// size=6499  chunks= 12  mem=77988  line=78000  total=2125890000
// size=8192  chunks= 11  mem=90112  line=90123  total=-1838664931
// size=8325  chunks=  9  mem=74925  line=74934  total=2042326170
// size=12288  chunks=  7  mem=86016  line=86023  total=-1950410431
// size=12421  chunks=  5  mem=62105  line=62110  total=1692808050
// size=27255  chunks=  1  mem=27255  line=27256  total=742862280
// 
// corr structure: unpack_event
  // DATA12 .aida.ts.subsystem_id
  // DATA16 .aida.ts.t1
  // DATA16 .aida.ts.t2
  // DATA16 .aida.ts.t3
  // DATA16 .aida.ts.t4
  // DATA12 .fatima.tamex[2].time_coarse[1024]
  // DATA12 .fatima.tamex[2].time_fine[1024]
  // DATA12 .fatima.tamex[2].time_edge[1024]
  // DATA12 .fatima.tamex[2].time_channel[1024]
  // DATA16 .fatima.ts.subsystem_id
  // DATA16 .fatima.ts.t1
  // DATA16 .fatima.ts.t2
  // DATA16 .fatima.ts.t3
  // DATA16 .fatima.ts.t4
  // DATA16 .fatima.trigger_window.post_trig_ns[64]
  // DATA16 .fatima.trigger_window.pre_trig_ns[64]
  // DATA12 .bplast.tamex[3].time_coarse[1024]
  // DATA12 .bplast.tamex[3].time_fine[1024]
  // DATA12 .bplast.tamex[3].time_edge[1024]
  // DATA12 .bplast.tamex[3].time_channel[1024]
  // DATA12 .bplast.ts.subsystem_id
  // DATA16 .bplast.ts.t1
  // DATA16 .bplast.ts.t2
  // DATA16 .bplast.ts.t3
  // DATA16 .bplast.ts.t4
  // DATA16 .bplast.trigger_window.post_trig_ns[64]
  // DATA16 .bplast.trigger_window.pre_trig_ns[64]
  // DATA12 .frsmain.wr.subsystem_id
  // DATA16 .frsmain.wr.t1
  // DATA16 .frsmain.wr.t2
  // DATA16 .frsmain.wr.t3
  // DATA16 .frsmain.wr.t4
  // DATA12_OVERFLOW .frsvftx.data.mqdc0.data[32]
  // DATA12_OVERFLOW .frsvftx.data.mqdc1.data[32]
  // DATA12 .frsvftx.data.vftx.time_fine[32][100]
  // DATA16 .frsvftx.data.vftx.time_coarse[32][100]
  // DATA16 .frsvftx.data.vftx.time_trigger
  // DATA16 .frsvftx.data.mtdc.data[34]
// .unpack_event/27255/.aida/5/.ts/5/.subsystem_id
                                  // .t1
                                  // .t2
                                  // .t3
                                  // .t4
                    // .fatima/8325/.tamex/8192/[2]/4096/.time_coarse/1024/[1024]
                                                      // .time_fine/1024/[1024]
                                                      // .time_edge/1024/[1024]
                                                      // .time_channel/1024/[1024]
                                 // .ts/5/.subsystem_id
                                       // .t1
                                       // .t2
                                       // .t3
                                       // .t4
                                 // .trigger_window/128/.post_trig_ns/64/[64]
                                                     // .pre_trig_ns/64/[64]
                    // .bplast/12421/.tamex/12288/[3]/4096/.time_coarse/1024/[1024]
                                                        // .time_fine/1024/[1024]
                                                        // .time_edge/1024/[1024]
                                                        // .time_channel/1024/[1024]
                                  // .ts/5/.subsystem_id
                                        // .t1
                                        // .t2
                                        // .t3
                                        // .t4
                                  // .trigger_window/128/.post_trig_ns/64/[64]
                                                      // .pre_trig_ns/64/[64]
                    // .frsmain/5/.wr/5/.subsystem_id
                                     // .t1
                                     // .t2
                                     // .t3
                                     // .t4
                    // .frsvftx/6499/.data/6499/.mqdc0/32/.data/32/[32]
                                             // .mqdc1/32/.data/32/[32]
                                             // .vftx/6401/.time_fine/3200/[32]/100/[100]
                                                        // .time_coarse/3200/[32]/100/[100]
                                                        // .time_trigger
                                             // .mtdc/34/.data/34/[34]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

